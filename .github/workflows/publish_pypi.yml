name: Release on PyPI
on:
  release:
    types:
      - published

jobs:
  build:
    name: Build package using Poetry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.7.1"

      - name: Build package
        run: poetry build

      - name: Store distribution files
        uses: actions/upload-artifact@v3
        with:
          name: distribution
          path: dist/

  publish:
    name: Publish package to PyPI
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.7.1"

      - name: Retrieve distribution files
        uses: actions/download-artifact@v3
        with:
          name: distribution
          path: dist/

      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish

  upload:
    name: Upload dist to release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Retrieve distribution files
        uses: actions/download-artifact@v3
        with:
          name: distribution
          path: dist/

      - name: Upload release attachment
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs');
            // Upload the release asset
            await github.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ github.event.release.id }},
              name: "dist/*",
              data: await fs.readFileSync("dist/*")
            });
